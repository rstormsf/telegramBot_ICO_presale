var Tx = require('ethereumjs-tx');
var Web3 = require('web3');
const { PRIVATE_KEY } = require('../../config.js');

async function deployContract() {
  let KOVAN_RPC_URL = 'https://kovan.infura.io/metamask';
  let parity = 'http://localhost:8549'
  let provider = new Web3.providers.HttpProvider(KOVAN_RPC_URL);
  let web3 = new Web3(provider);
  var privateKey = new Buffer(PRIVATE_KEY, 'hex');
  var publicKey = '0x030B90762Cee7a87ee4f51e715a302177043835e';

  var txcount = await web3.eth.getTransactionCount(publicKey);
  var rawTx = {
      nonce: web3.utils.toHex(txcount),
      gasPrice: web3.utils.toHex(1000000000),
      gasLimit: web3.utils.toHex(6100500),
      data: '0x60606040526000600460006101000a81548160ff021916908315150217905550341561002a57600080fd5b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061059a8061007a6000396000f3006060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e146100b95780633197cbb6146100e2578063355274ea1461010b578063392e53cd146101345780633ccfd60b146101615780634ec81af11461017657806378e97925146101ca5780638da5cb5b146101f3578063a6f2ae3a14610248578063b29a61c114610252578063db068e0e1461029f575b6100b76102c2565b005b34156100c457600080fd5b6100cc610349565b6040518082815260200191505060405180910390f35b34156100ed57600080fd5b6100f561034f565b6040518082815260200191505060405180910390f35b341561011657600080fd5b61011e610355565b6040518082815260200191505060405180910390f35b341561013f57600080fd5b61014761035b565b604051808215151515815260200191505060405180910390f35b341561016c57600080fd5b61017461036e565b005b341561018157600080fd5b6101c8600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080359060200190919080359060200190919050506103cc565b005b34156101d557600080fd5b6101dd61045f565b6040518082815260200191505060405180910390f35b34156101fe57600080fd5b610206610465565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102506102c2565b005b341561025d57600080fd5b610289600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061048b565b6040518082815260200191505060405180910390f35b34156102aa57600080fd5b6102c060048080359060200190919050506104a3565b005b600080341115156102d257600080fd5b600460009054906101000a900460ff1615156102ed57600080fd5b33905034600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555061034634610509565b50565b60035481565b60015481565b60025481565b600460009054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103ca57600080fd5b565b600460009054906101000a900460ff161515156103e857600080fd5b83600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260008190555081600181905550806002819055506001600460006101000a81548160ff02191690831515021790555050505050565b60005481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104ff57600080fd5b8060038190555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561056b57600080fd5b505600a165627a7a723058200721b16183006473fb07afacfc9ee5bfa7d62e441fc054fa38cdfb285c62c8360029'
    }
    
    var tx = new Tx(rawTx);
    tx.sign(privateKey);
    
    var serializedTx = tx.serialize();
    
    await web3.eth.sendSignedTransaction('0x' + serializedTx.toString('hex'))
    .on('receipt', console.log);
}

